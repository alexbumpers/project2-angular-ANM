{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/my-profile/my-profile.component.css","webpack:///./src/app/components/my-profile/my-profile.component.html","webpack:///./src/app/components/my-profile/my-profile.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile-page/profile-page.component.css","webpack:///./src/app/components/profile-page/profile-page.component.html","webpack:///./src/app/components/profile-page/profile-page.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/search/search.component.css","webpack:///./src/app/components/search/search.component.html","webpack:///./src/app/components/search/search.component.ts","webpack:///./src/app/components/user-live-search/user-live-search.component.css","webpack:///./src/app/components/user-live-search/user-live-search.component.html","webpack:///./src/app/components/user-live-search/user-live-search.component.ts","webpack:///./src/app/components/users/users.component.css","webpack:///./src/app/components/users/users.component.html","webpack:///./src/app/components/users/users.component.ts","webpack:///./src/app/models/friend.ts","webpack:///./src/app/models/post.ts","webpack:///./src/app/services/friends.service.ts","webpack:///./src/app/services/genre-preference.service.ts","webpack:///./src/app/services/navbar.service.ts","webpack:///./src/app/services/register.service.ts","webpack:///./src/app/services/session-service.service.ts","webpack:///./src/app/services/spotify.service.ts","webpack:///./src/app/services/users.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { ProfilePageComponent } from './app/components/profile-page/profile-page.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes, Router } from '@angular/router';\r\n\r\nimport { RegisterComponent } from 'src/app/components/register/register.component';\r\nimport { LoginComponent } from 'src/app/components/login/login.component';\r\nimport { NavbarComponent } from 'src/app/components/navbar/navbar.component';\r\nimport { MyProfileComponent } from './app/components/my-profile/my-profile.component';\r\nimport { UsersComponent } from './app/components/users/users.component';\r\nimport { UserLiveSearchComponent } from './app/components/user-live-search/user-live-search.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'edit', component: MyProfileComponent },\r\n  { path: 'profile', component: ProfilePageComponent },\r\n  { path: 'users', component: UsersComponent},\r\n  { path: 'search', component: UserLiveSearchComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [ RouterModule ],\r\n  declarations: []\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\"","module.exports = \"<!-- <app-register></app-register> -->\\r\\n<!-- <nav>\\r\\n    <a routerLink=\\\"/login\\\">Login</a>\\r\\n    <a routerLink=\\\"/register\\\">Register</a>\\r\\n    <a routerLink=\\\"/edit\\\">Edit</a>\\r\\n  </nav> -->\\r\\n<app-navbar></app-navbar>\\r\\n<router-outlet></router-outlet>\"","import { Component, ViewEncapsulation } from '@angular/core';\r\nimport {  HttpModule } from '@angular/http';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [HttpModule]\r\n})\r\nexport class AppComponent {\r\n  title = 'project2-angular-anm';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { AppRoutingModule } from '../app-routing.module';\r\nimport { MyProfileComponent } from './components/my-profile/my-profile.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { SearchComponent } from './components/search/search.component';\r\nimport { HttpModule } from '@angular/http';\r\nimport { ProfilePageComponent } from './components/profile-page/profile-page.component';\r\nimport { UsersComponent } from './components/users/users.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RegisterService } from './services/register.service';\r\nimport { UserLiveSearchComponent } from './components/user-live-search/user-live-search.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    MyProfileComponent,\r\n    NavbarComponent,\r\n    SearchComponent,\r\n    ProfilePageComponent,\r\n    UsersComponent,\r\n    UserLiveSearchComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    HttpModule,\r\n    AppRoutingModule,\r\n\r\n    \r\n\r\n\r\n  ],\r\n  providers: [RegisterService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","module.exports = \"#main {\\r\\n    background-image:  linear-gradient(to right, rgba(32,1,34, 0.5) -23.76%, rgba(111,0,0, 0.4) 76.43%), url(https://images.unsplash.com/photo-1527862345617-bdedfa6392dd?ixlib=rb-0.3.5&s=a546b9c2ea5bcdadb669b1dab64155e5&auto=format&fit=crop&w=1950&q=80);\\r\\n    background-position: center center;\\r\\n    background-repeat:  no-repeat;\\r\\n    background-attachment: fixed;\\r\\n    background-size:  cover;\\r\\n    font-family: 'Montserrat', sans-serif;\\r\\n    -webkit-font-smoothing: antialiased;\\r\\n    /* background: -webkit-linear-gradient(to right, #200122, #6f0000); Chrome 10-25, Safari 5.1-6 */\\r\\n    /* background: linear-gradient(to right, rgba(32,1,34, 0.6) 0%, rgba(111,0,0, 0.6) 0%); W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\\r\\n    /* background-color: rgba(0, 0, 0, .5); */\\r\\n    height: 100vh;\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n#loginContainer {\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n\\r\\n#about-text {\\r\\n    color: white;\\r\\n    text-shadow:\\r\\n    -1px -1px 0 #000,\\r\\n    1px -1px 0 #000,\\r\\n    -1px 1px 0 #000,\\r\\n    1px 1px 0 #000;\\r\\n}\\r\\n\\r\\n\\r\\n#registerLink {\\r\\n    text-decoration: none;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n\\r\\n#container {\\r\\n    margin-top: 100px;\\r\\n}\\r\\n\\r\\n\\r\\n.btn-primary {\\r\\n    background-color: #1DB954;\\r\\n    border: none;\\r\\n    border-radius: 5px;\\r\\n    padding-left: 35px;\\r\\n    padding-right: 35px;\\r\\n    transition: -webkit-transform .3s ease-out;\\r\\n    transition: transform .3s ease-out;\\r\\n    transition: transform .3s ease-out, -webkit-transform .3s ease-out;\\r\\n}\\r\\n\\r\\n\\r\\n.btn-primary:hover {\\r\\n    -webkit-transform: translateY(-5px);\\r\\n            transform: translateY(-5px);\\r\\n}\\r\\n\\r\\n\\r\\n#emailInput {\\r\\n    transition: -webkit-transform .3s ease-out;\\r\\n    transition: transform .3s ease-out;\\r\\n    transition: transform .3s ease-out, -webkit-transform .3s ease-out;\\r\\n}\\r\\n\\r\\n\\r\\n#emailInput:hover {\\r\\n    -webkit-transform: translate(5px, -5px);\\r\\n            transform: translate(5px, -5px)\\r\\n}\\r\\n\\r\\n\\r\\n#passwordInput {\\r\\n    transition: -webkit-transform .3s ease-out;\\r\\n    transition: transform .3s ease-out;\\r\\n    transition: transform .3s ease-out, -webkit-transform .3s ease-out;\\r\\n}\\r\\n\\r\\n\\r\\n#passwordInput:hover {\\r\\n    -webkit-transform: translate(5px, -5px);\\r\\n            transform: translate(5px, -5px)\\r\\n}\\r\\n\\r\\n\\r\\n#home-subheader-body {\\r\\n    font-size: 22px;\\r\\n}\\r\\n\\r\\n\\r\\n#brand-name {\\r\\n    color: white;\\r\\n}\"","module.exports = \"\\r\\n<div id=\\\"main\\\">\\r\\n  <br>\\r\\n<link href=\\\"https://fonts.googleapis.com/css?family=Montserrat\\\" rel=\\\"stylesheet\\\">\\r\\n\\r\\n<br>\\r\\n<div class=\\\"container\\\" id=\\\"container\\\">\\r\\n<div class=\\\"row\\\">\\r\\n<div class=\\\"container text-center col-md-6\\\" id=\\\"loginContainer\\\">\\r\\n<h1 id=\\\"loginHeader\\\"> Sign in</h1>\\r\\n<!-- Use ngSubmit to run checkLogin() on submit -->\\r\\n<!-- checkLogin will manage credential checking w/ DB and routing -->\\r\\n<form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"checkLogin()\\\">\\r\\n  <div class=\\\"form-group text-left\\\">\\r\\n    <label for=\\\"emailAddress\\\">Email address</label>\\r\\n    <input type=\\\"email\\\" formControlName=\\\"emailAddress\\\" class=\\\"form-control\\\" id=\\\"emailInput\\\"/>\\r\\n    <div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"form-group text-left\\\">\\r\\n    <label for=\\\"password\\\">Password</label>\\r\\n    <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" id=\\\"passwordInput\\\"/>\\r\\n    <div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <input class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Sign in\\\">\\r\\n\\r\\n</form>\\r\\n<br>\\r\\n<a href=\\\"/register\\\" id=\\\"registerLink\\\">\\r\\n<div>\\r\\n  Not registered? Create an account.\\r\\n</div>\\r\\n</a>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container text-left col-md-6\\\" id=\\\"about-text\\\">\\r\\n<div id=\\\"home-subheader\\\">\\r\\n    <h2>Your music, your matches</h2>\\r\\n</div>\\r\\n<div id=\\\"home-subheader-body\\\">\\r\\n<p>MBSN connects and matches you with people in your area based on your music taste using Spotify's Web API and proprietary matching technology.</p>\\r\\n</div>\\r\\n\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n</div>\\r\\n\"","import { Router } from '@angular/router';\r\nimport { UsersService } from 'src/app/services/users.service';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Users } from '../../models/users.model';\r\nimport { SessionServiceService } from '../../services/session-service.service';\r\nimport { NavbarService } from 'src/app/services/navbar.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['login.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor(private userService: UsersService,\r\n     private router: Router,\r\n     private sessionService: SessionServiceService,\r\n     public nav: NavbarService) { }\r\n\r\n  ngOnInit() {\r\n    this.nav.hide();\r\n  }\r\n\r\n  loginForm = new FormGroup({\r\n    emailAddress: new FormControl(),\r\n    password: new FormControl()\r\n  });\r\n  \r\n  user: Users;\r\n  \r\n  checkLogin(){\r\n    let email = this.loginForm.get(\"emailAddress\").value;\r\n    let password = this.loginForm.get(\"password\").value;\r\n    var id = null;\r\n    // console.log(email);\r\n    // console.log(password);\r\n\r\n    let promise = new Promise<Users>((resolve) => {\r\n      resolve(this.userService.getUser(email, password));\r\n    });\r\n\r\n    promise.then((value)=>{\r\n      this.user = value;\r\n      // console.log(this.user.password);\r\n\r\n      if(this.user.password === password){\r\n        id = this.user.id;\r\n      }\r\n      if(id != null){\r\n        this.sessionService.changeMessage(id);\r\n        sessionStorage.id = JSON.stringify(id);\r\n        this.router.navigateByUrl(\"/profile\");\r\n      }\r\n    });\r\n\r\n    \r\n    // if(id != -1){\r\n    //   promise = new Promise<Users>((resolve) => {\r\n    //     resolve(this.userService.loginValid(id));\r\n    //   });\r\n    // }\r\n\r\n    // promise.then((value)=>{\r\n    //   if(value.id == id){\r\n    //     console.log(\"cool\");\r\n    //     this.router.navigateByUrl(\"/profile\");\r\n    //   }\r\n    // })\r\n\r\n    // this.userService.getUser(email, password)subscribe((value) =>{\r\n    //   console.log(value);\r\n    // });\r\n\r\n\r\n  }\r\n}\r\n","module.exports = \"input[type=\\\"file\\\"] {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n#fileLabel {\\r\\n        /* border: 1px solid #ccc; */\\r\\n        border-radius: 50%;\\r\\n        /* padding: 50px 12px; */\\r\\n        /* cursor: pointer;\\r\\n        background-color: black; */\\r\\n        /* display: none; */\\r\\n    \\r\\n        /* margin: 0; */\\r\\n        padding-top: 50px;\\r\\n        padding-bottom: 50px;\\r\\n        padding-left: 50px;\\r\\n        padding-right: 50px;\\r\\n        border: none;\\r\\n        box-shadow: none;\\r\\n        text-align: center;\\r\\n        /* background-color: black; */\\r\\n        background-image: url(https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png);\\r\\n        display: inline-block;\\r\\n        background-clip: padding-box;\\r\\n        background-size: cover;\\r\\n        background-position: center center;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n#fileLabel:hover {\\r\\n    background-image: url(http://free-icon-rainbow.com/i/icon_00155/icon_001550_256.png);\\r\\n    transition: .7s;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<!-- \\r\\n<br>\\r\\n<div class=\\\"container text-center\\\" id=\\\"editProfileContainer\\\">\\r\\n<h2 id=\\\"editProfileHeader\\\"> Edit Profile </h2>\\r\\n<form [formGroup]=\\\"editProfileForm\\\" action=\\\"profile\\\">\\r\\n  <div class=\\\"form-group text-center\\\">\\r\\n      <img *ngIf=\\\"url\\\" width=300 height=300 src=\\\"{{url}}\\\" />\\r\\n    <label id=\\\"fileLabel\\\" for=\\\"avatar\\\">\\r\\n    <input type=\\\"file\\\"\\r\\n            id=\\\"avatar\\\" name=\\\"avatar\\\"\\r\\n            accept=\\\"image/png, image/jpeg\\\" />\\r\\n    </label>\\r\\n  </div>\\r\\n  <div class=\\\"form-group text-left\\\">\\r\\n    <label for=\\\"firstName\\\">First name</label>\\r\\n    <input type=\\\"text\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\"/>\\r\\n    <div>\\r\\n   -->\\r\\n    <!-- </div>\\r\\n  </div> -->\\r\\n\\r\\n  <!-- <div class=\\\"form-group text-left\\\">\\r\\n    <label for=\\\"lastName\\\">Last name</label>\\r\\n    <input type=\\\"text\\\" formControlName=\\\"lastName\\\" class=\\\"form-control\\\"/>\\r\\n    <div> -->\\r\\n      <!-- <div>Last name is required</div> -->\\r\\n    <!-- </div>\\r\\n  </div> -->\\r\\n\\r\\n  <!-- <div class=\\\"form-group text-left\\\">\\r\\n    <label for=\\\"lastName\\\">Email</label>\\r\\n    <input type=\\\"email\\\" formControlName=\\\"emailAddress\\\" class=\\\"form-control\\\"/>\\r\\n    <div> -->\\r\\n      <!-- <div>Last name is required</div> -->\\r\\n    <!-- </div>\\r\\n  </div> -->\\r\\n\\r\\n  <!-- <div class=\\\"form-group text-left\\\">\\r\\n    <label for=\\\"password\\\">Password</label>\\r\\n    <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\"/>\\r\\n    <div> -->\\r\\n      <!-- <div>Last name is required</div> -->\\r\\n    <!-- </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group text-left\\\">\\r\\n    <label for=\\\"phoneNumber\\\">Phone number</label>\\r\\n    <input type=\\\"text\\\" formControlName=\\\"phoneNumber\\\" class=\\\"form-control\\\"/>\\r\\n    <div> -->\\r\\n      <!-- <div>Last name is required</div> -->\\r\\n    <!-- </div> -->\\r\\n  <!-- </div> -->\\r\\n\\r\\n  <!-- <div class=\\\"form-group text-left\\\">\\r\\n    <label for=\\\"city\\\">City</label>\\r\\n    <input type=\\\"text\\\" formControlName=\\\"city\\\" class=\\\"form-control\\\"/>\\r\\n    <div> -->\\r\\n      <!-- <div>Last name is required</div> -->\\r\\n    <!-- </div>\\r\\n  </div> -->\\r\\n\\r\\n  <!-- <div class=\\\"form-group text-left\\\">\\r\\n    <label for=\\\"state\\\">State</label>\\r\\n    <input type=\\\"text\\\" formControlName=\\\"state\\\" class=\\\"form-control\\\"/>\\r\\n    <div> -->\\r\\n      <!-- <div>Last name is required</div> -->\\r\\n    <!-- </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group text-left\\\">\\r\\n    <label for=\\\"aboutMe\\\">About me</label>\\r\\n    <textarea class=\\\"form-control\\\" id=\\\"aboutMe\\\" rows=\\\"2\\\"></textarea>\\r\\n  </div>\\r\\n  <app-search></app-search>\\r\\n  <input class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Save changes\\\">\\r\\n\\r\\n</form>\\r\\n</div>\\r\\n<br> -->\\r\\n \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<br>\\r\\n<div class=\\\"container text-center\\\" id=\\\"editProfileContainer\\\">\\r\\n<h2 id=\\\"editProfileHeader\\\"> Edit Profile </h2>\\r\\n<form [formGroup]=\\\"editProfileForm\\\" action=\\\"profile\\\" (ngSubmit)=\\\"onChangesSavedSubmit()\\\">\\r\\n  <div class=\\\"form-group text-center\\\">\\r\\n      <img *ngIf=\\\"url\\\" width=300 height=300 src=\\\"{{url}}\\\" />\\r\\n    <label id=\\\"fileLabel\\\" for=\\\"avatar\\\">\\r\\n    <input type=\\\"file\\\"\\r\\n            id=\\\"avatar\\\" name=\\\"avatar\\\"\\r\\n            accept=\\\"image/png, image/jpeg\\\" />\\r\\n    </label>\\r\\n  </div>\\r\\n  <div class=\\\"form-group text-left\\\">\\r\\n    <label for=\\\"firstName\\\">First name</label>\\r\\n    <input type=\\\"text\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\"/>\\r\\n    <div>\\r\\n      <!-- <div>First name is required</div> -->\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group text-left\\\">\\r\\n    <label for=\\\"lastName\\\">Last name</label>\\r\\n    <input type=\\\"text\\\" formControlName=\\\"lastName\\\" class=\\\"form-control\\\"/>\\r\\n    <div>\\r\\n      <!-- <div>Last name is required</div> -->\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group text-left\\\">\\r\\n    <label for=\\\"lastName\\\">Email</label>\\r\\n    <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\"/>\\r\\n    <div>\\r\\n      <!-- <div>Last name is required</div> -->\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group text-left\\\">\\r\\n    <label for=\\\"password\\\">Password</label>\\r\\n    <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\"/>\\r\\n    <div>\\r\\n      <!-- <div>Last name is required</div> -->\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group text-left\\\">\\r\\n    <label for=\\\"phoneNumber\\\">Phone number</label>\\r\\n    <input type=\\\"text\\\" formControlName=\\\"phoneNumber\\\" class=\\\"form-control\\\"/>\\r\\n    <div>\\r\\n      <!-- <div>Last name is required</div> -->\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"text-left\\\">\\r\\n    <label for=\\\"gender\\\">Gender</label>\\r\\n    <select formControlName=\\\"gender\\\" id=\\\"gender\\\" class=\\\"form-control\\\">\\r\\n      <option selected>Select gender</option>\\r\\n      <option>Male</option>\\r\\n      <option>Female</option>\\r\\n      <option>Other</option>\\r\\n    </select>\\r\\n  </div>\\r\\n  <!-- <div formGroupName=\\\"location\\\">\\r\\n    <div class=\\\"text-left\\\">\\r\\n      <label for=\\\"city\\\">City</label>\\r\\n        <input type=\\\"city\\\" formControlName=\\\"city\\\" class=\\\"form-control\\\"/>\\r\\n    </div> \\r\\n    </div> -->\\r\\n<!-- \\r\\n    <div class=\\\"text-left\\\">\\r\\n      <label for=\\\"state\\\">State</label>\\r\\n      <select formControlName=\\\"state\\\" id=\\\"state\\\" class=\\\"form-control\\\">\\r\\n        <option value=\\\"\\\">N/A</option>\\r\\n        <option value=\\\"AK\\\">Alaska</option>\\r\\n        <option value=\\\"AL\\\">Alabama</option>\\r\\n        <option value=\\\"AR\\\">Arkansas</option>\\r\\n        <option value=\\\"AZ\\\">Arizona</option>\\r\\n        <option value=\\\"CA\\\">California</option>\\r\\n        <option value=\\\"CO\\\">Colorado</option>\\r\\n        <option value=\\\"CT\\\">Connecticut</option>\\r\\n        <option value=\\\"DC\\\">District of Columbia</option>\\r\\n        <option value=\\\"DE\\\">Delaware</option>\\r\\n        <option value=\\\"FL\\\">Florida</option>\\r\\n        <option value=\\\"GA\\\">Georgia</option>\\r\\n        <option value=\\\"HI\\\">Hawaii</option>\\r\\n        <option value=\\\"IA\\\">Iowa</option>\\r\\n        <option value=\\\"ID\\\">Idaho</option>\\r\\n        <option value=\\\"IL\\\">Illinois</option>\\r\\n        <option value=\\\"IN\\\">Indiana</option>\\r\\n        <option value=\\\"KS\\\">Kansas</option>\\r\\n        <option value=\\\"KY\\\">Kentucky</option>\\r\\n        <option value=\\\"LA\\\">Louisiana</option>\\r\\n        <option value=\\\"MA\\\">Massachusetts</option>\\r\\n        <option value=\\\"MD\\\">Maryland</option>\\r\\n        <option value=\\\"ME\\\">Maine</option>\\r\\n        <option value=\\\"MI\\\">Michigan</option>\\r\\n        <option value=\\\"MN\\\">Minnesota</option>\\r\\n        <option value=\\\"MO\\\">Missouri</option>\\r\\n        <option value=\\\"MS\\\">Mississippi</option>\\r\\n        <option value=\\\"MT\\\">Montana</option>\\r\\n        <option value=\\\"NC\\\">North Carolina</option>\\r\\n        <option value=\\\"ND\\\">North Dakota</option>\\r\\n        <option value=\\\"NE\\\">Nebraska</option>\\r\\n        <option value=\\\"NH\\\">New Hampshire</option>\\r\\n        <option value=\\\"NJ\\\">New Jersey</option>\\r\\n        <option value=\\\"NM\\\">New Mexico</option>\\r\\n        <option value=\\\"NV\\\">Nevada</option>\\r\\n        <option value=\\\"NY\\\">New York</option>\\r\\n        <option value=\\\"OH\\\">Ohio</option>\\r\\n        <option value=\\\"OK\\\">Oklahoma</option>\\r\\n        <option value=\\\"OR\\\">Oregon</option>\\r\\n        <option value=\\\"PA\\\">Pennsylvania</option>\\r\\n        <option value=\\\"PR\\\">Puerto Rico</option>\\r\\n        <option value=\\\"RI\\\">Rhode Island</option>\\r\\n        <option value=\\\"SC\\\">South Carolina</option>\\r\\n        <option value=\\\"SD\\\">South Dakota</option>\\r\\n        <option value=\\\"TN\\\">Tennessee</option>\\r\\n        <option value=\\\"TX\\\">Texas</option>\\r\\n        <option value=\\\"UT\\\">Utah</option>\\r\\n        <option value=\\\"VA\\\">Virginia</option>\\r\\n        <option value=\\\"VT\\\">Vermont</option>\\r\\n        <option value=\\\"WA\\\">Washington</option>\\r\\n        <option value=\\\"WI\\\">Wisconsin</option>\\r\\n        <option value=\\\"WV\\\">West Virginia</option>\\r\\n        <option value=\\\"WY\\\">Wyoming</option>\\r\\n      </select>\\r\\n    </div>\\r\\n  </div> -->\\r\\n  <div class=\\\"text-left\\\">\\r\\n    <label for=\\\"orientation\\\">Orientation</label>\\r\\n    <select formControlName=\\\"orientation\\\" id=\\\"orientation\\\" class=\\\"form-control\\\">\\r\\n      <option selected>Select orientation</option>\\r\\n      <option>Straight</option>\\r\\n      <option>Gay</option>\\r\\n      <option>Bisexual</option>\\r\\n    </select>\\r\\n  </div>\\r\\n  <div class=\\\"form-group text-left\\\">\\r\\n    <label for=\\\"aboutMe\\\">About me</label>\\r\\n    <textarea class=\\\"form-control\\\" id=\\\"aboutMe\\\" rows=\\\"2\\\"></textarea>\\r\\n  </div>\\r\\n  <app-search></app-search>\\r\\n  <input class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Save changes\\\">\\r\\n\\r\\n</form>\\r\\n</div>\\r\\n<br>\"","import { Component, ViewEncapsulation, OnInit } from '@angular/core';\r\nimport { NavbarService } from 'src/app/services/navbar.service';\r\nimport { SessionServiceService } from '../../services/session-service.service';\r\nimport { Users } from 'src/app/models/users.model';\r\nimport { Observable } from 'rxjs';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { RegisterService } from 'src/app/services/register.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-my-profile',\r\n  templateUrl: './my-profile.component.html',\r\n  styleUrls: ['./my-profile.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class MyProfileComponent implements OnInit {\r\n  dataSaved = false;\r\n  editProfileForm: FormGroup;\r\n  allUsers$: Observable<Users[]>;\r\n\r\n  constructor(public nav: NavbarService, private sessionService: SessionServiceService,\r\n     private formBuilder: FormBuilder,  private registerService: RegisterService) { }\r\n  sessionId:string;\r\n\r\n  ngOnInit() {\r\n    \r\n    this.nav.show();\r\n    this.editProfileForm = this.formBuilder.group({\r\n      firstName: ['', [ Validators.required ] ],\r\n      lastName: ['', [ Validators.required ] ],\r\n      password: ['', [ Validators.required ] ],\r\n      email: ['', [ Validators.required ] ],\r\n      phoneNumber: ['', [ Validators.required ] ],\r\n      gender: ['', [ Validators.required ] ],\r\n      orientation: ['', [ Validators.required ] ],\r\n      aboutMe:  ['', [ Validators.required ] ],\r\n    })\r\n      // location: this.formBuilder.group({\r\n      //   city: ['', [ Validators.required ] ],\r\n      //   state: ['', [ Validators.required ] ]\r\n      // })\r\n    this.sessionService.currentMessage.subscribe(message => this.sessionId = message);\r\n    console.log(\"login: \" + this.sessionId);\r\n  }\r\n\r\n  // onChangesSavedSubmit() {\r\n  //   this.dataSaved = false;\r\n  //   let formVal = this.editProfileForm.value;\r\n  //   this.registerService.putUser(formVal);\r\n  // }\r\n\r\n}\r\n\r\n// change message with current id when edit profile button is clicked, then execute navigate, then pull id","module.exports = \"#main-nav {\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n#navBrand {\\r\\n    color: white;\\r\\n    font-size: 26px;\\r\\n}\\r\\n\\r\\n#navbarFirst {\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n#navbarSecond {\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n#navInline {\\r\\n    color: white;\\r\\n    font-size: 26px;\\r\\n}\\r\\n\\r\\n#navbarFirst, #navbarSecond, #navInline {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\"","module.exports = \"<!-- <nav *ngIf=\\\"nav.visible\\\" class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\" style=\\\"background-color: #1DB954\\\"> -->\\r\\n    <nav *ngIf=\\\"nav.visible\\\" id=\\\"main-nav\\\" class=\\\"navbar navbar-expand-lg navbar-light\\\" style=\\\"background-color: #1DB954;\\\">\\r\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\" id=\\\"navBrand\\\">Home</a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\r\\n      <ul class=\\\"navbar-nav\\\">\\r\\n        <li class=\\\"nav-item\\\" (click)=passUserSessionToProfilePageViaNavbar()>\\r\\n          <a class=\\\"nav-link\\\" id=\\\"navbarFirst\\\"> My profile<span class=\\\"sr-only\\\">(current)</span></a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\" (click)=\\\"passUserSessionToEditProfilePage()\\\">\\r\\n          <a class=\\\"nav-link\\\" id=\\\"navbarSecond\\\">Edit profile</a>\\r\\n        </li>\\r\\n        <!-- <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Disabled</a>\\r\\n        </li> -->\\r\\n      </ul>\\r\\n      \\r\\n    </div>\\r\\n    <span class=\\\"navbar-text\\\" id=\\\"navInline\\\" (click)=\\\"endUserSessionOnLogoutClick()\\\">\\r\\n      Logout\\r\\n    </span>\\r\\n  </nav>\"","import { Component, OnInit } from '@angular/core';\r\nimport { NavbarService } from '../../services/navbar.service';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { SessionServiceService } from '../../services/session-service.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NavbarComponent implements OnInit{\r\n\r\n  constructor(public nav: NavbarService, private sessionService: SessionServiceService, private router: Router) {\r\n\r\n  }\r\n\r\n  sessionId:string;\r\n\r\n  ngOnInit() {\r\n    this.sessionService.currentMessage.subscribe(message => this.sessionId = message);\r\n    console.log(\"login: \" + this.sessionId);\r\n  }\r\n\r\n  \r\n  passUserSessionToEditProfilePage() {\r\n    this.sessionService.changeMessage;\r\n    this.router.navigateByUrl(\"/edit\");\r\n  }\r\n\r\n  passUserSessionToProfilePageViaNavbar() {\r\n    this.sessionService.changeMessage;\r\n    this.router.navigateByUrl(\"/profile\");\r\n  }\r\n\r\n  endUserSessionOnLogoutClick() {\r\n    sessionStorage.clear();\r\n    this.router.navigateByUrl(\"/\")\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"*{\\r\\n    color: rgb(136, 153, 166);\\r\\n}\\r\\n#main-profile {\\r\\n    background-color: rgb(20, 29, 38);\\r\\n    background-position: center center;\\r\\n    background-repeat:  no-repeat;\\r\\n    background-attachment: fixed;\\r\\n    background-size:  cover;\\r\\n    font-family: 'Montserrat', sans-serif;\\r\\n    -webkit-font-smoothing: antialiased;\\r\\n    height: 100%;\\r\\n    \\r\\n}\\r\\nimg{\\r\\n    -o-object-fit: cover;\\r\\n       object-fit: cover;\\r\\n}\\r\\nhr{\\r\\n    border-style: solid;\\r\\n    background-color: rgb(20, 29, 38);\\r\\n    color: rgb(20, 29, 38);\\r\\n    height: 3px;\\r\\n    width: 100%;\\r\\n}\\r\\nfigcaption, #friend-name, #prof-username{\\r\\n    color: white;\\r\\n}\\r\\n#header{\\r\\n    height: 200px;\\r\\n    background-color: rgb(20, 29, 38);\\r\\n}\\r\\n#nav-bar{\\r\\n    background-color: rgb(27, 40, 54);\\r\\n}\\r\\n#base{\\r\\n    display: flex;\\r\\n    justify-content: space-around;\\r\\n    flex-direction: row;\\r\\n    border-style: none;\\r\\n    width: 100%;\\r\\n}\\r\\n#left-col, #center-col, #right-col{\\r\\n    text-align: center;\\r\\n    border-style: none;\\r\\n    border-radius: 5px;\\r\\n}\\r\\n/* LEFT COLUMN */\\r\\n#left-col{\\r\\n    width: 20rem;\\r\\n    overflow: visible;\\r\\n    display: flex;\\r\\n    justify-content: flex-start;\\r\\n    align-items: center;\\r\\n    flex-direction: column;\\r\\n    margin-top: 10px;\\r\\n}\\r\\n#prof-pic{\\r\\n    border-radius: 20%;\\r\\n    width: 11rem;\\r\\n    height: 11rem;\\r\\n}\\r\\n#prof-username{\\r\\n    font-size: 18px;\\r\\n    color: white;\\r\\n    text-align: center;    \\r\\n    width: 11rem;\\r\\n    word-wrap: break-word;\\r\\n}\\r\\n/* CENTER COLUMN */\\r\\n#center-col{\\r\\n    border-color: rgb(10, 10, 10);\\r\\n    border-width: 1px;\\r\\n    background-color: rgb(27, 40, 54);\\r\\n    margin: 10px 10px 0px 0px;\\r\\n    width: 60%;\\r\\n}\\r\\n#post-timeline{\\r\\n    border-color: rgb(10, 10, 10);\\r\\n    text-align: left;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n#post-unit{\\r\\n    margin-top: 10px;\\r\\n    display: flex;\\r\\n    justify-content: left;\\r\\n    transition: all .2s ease-in-out; \\r\\n}\\r\\n#post-unit:hover { -webkit-transform: scale(1.03); transform: scale(1.03); }\\r\\n#post-prof-pic{\\r\\n    height: 4rem;\\r\\n    width: 4rem;\\r\\n    border-radius: 50%;\\r\\n    margin: 0px 5px 5px 5px;\\r\\n    transition: all .2s ease-in-out; \\r\\n}\\r\\n#post-prof-pic:hover { -webkit-transform: scale(1.15); transform: scale(1.15); }\\r\\n#post-handle{\\r\\n    width: 4rem;\\r\\n    overflow: hidden;\\r\\n}\\r\\n#post-text-container{\\r\\n    margin-left: 5px;\\r\\n    margin-right: 5px;\\r\\n    width: 80%;\\r\\n    text-align: center;\\r\\n    font-size: 15px;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: space-around;\\r\\n}\\r\\n#post-text{\\r\\n    color: white;\\r\\n}\\r\\n#post-likes{\\r\\n}\\r\\n#post-buttons-container{\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: left;\\r\\n}\\r\\n#post-buttons{\\r\\n    color: white;\\r\\n    width: 40px;\\r\\n    text-align: center;\\r\\n}\\r\\n/* RIGHT COLUMN */\\r\\n#right-col{\\r\\n    width: 20rem;\\r\\n    overflow: auto;\\r\\n    border-color: rgb(10, 10, 10);\\r\\n    border-width: 1px;\\r\\n    background-color: rgb(27, 40, 54);\\r\\n    margin-top: 10px;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: flex-start;\\r\\n}\\r\\n#friend-prof-pic{\\r\\n    height: 3rem;\\r\\n    width: 3rem;\\r\\n    border-radius: 50%;\\r\\n    margin: 5px 5px 5px 5px;\\r\\n}\\r\\n#friend-unit{\\r\\n    display: flex;\\r\\n    justify-content: flex-start;\\r\\n    align-items: center;\\r\\n    overflow: hidden;\\r\\n}\"","module.exports = \"<div id=\\\"main-profile\\\">\\r\\n<div class=\\\"container\\\" id=\\\"base\\\">\\r\\n  <!-- LEFT COLUMN -->\\r\\n  <!-- Profile Picture makes get request to /edit -->\\r\\n  <div class=\\\"container\\\" id=\\\"left-col\\\">\\r\\n    <a href=\\\"/edit\\\">\\r\\n      <img id=\\\"prof-pic\\\" src=\\\"{{currUser.pictureUrl}}\\\">\\r\\n    </a>\\r\\n    <p id=\\\"prof-username\\\">{{currUser.firstName}} {{currUser.lastName}}</p>\\r\\n    <p id=\\\"prof-aboutMe\\\">{{currUser.aboutMe}}</p>\\r\\n  </div>\\r\\n\\r\\n  <!-- CENTER COLUMN -->\\r\\n  <!-- Profile picture should be linked to that user's profile -->\\r\\n  <div class=\\\"container\\\" id=\\\"center-col\\\">\\r\\n    <div id=\\\"post-timeline\\\" *ngFor=\\\"let post of posts\\\">\\r\\n      <div id=\\\"post-unit\\\">\\r\\n        <!-- PROFILE PIC -->\\r\\n        <a id=\\\"post-prof-pic-link\\\" href=\\\"\\\">\\r\\n          <img id=\\\"post-prof-pic\\\" src=\\\"{{post.prof_pic}}\\\">\\r\\n          <figcaption id=\\\"post-handle\\\">{{post.handle}}</figcaption>\\r\\n        </a>\\r\\n        <!-- TEXT BODY -->\\r\\n        <div id=\\\"post-text-container\\\">\\r\\n          <span id=\\\"post-text\\\">{{post.text}}</span>\\r\\n          <span id=\\\"post-likes\\\">{{post.likes}}</span>\\r\\n        </div>\\r\\n        <!-- SIDE BUTTONS -->\\r\\n        <div id=\\\"post-buttons-container\\\">\\r\\n          <button class=\\\"btn btn-success\\\" id=\\\"post-button\\\">✓</button>\\r\\n          <br>\\r\\n          <button class=\\\"btn btn-danger\\\" id=\\\"post-buttons\\\" (click)=\\\"hidePost()\\\">X</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <hr>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  <!-- RIGHT COLUMN -->\\r\\n  <!-- Whole element links to that user's profile -->\\r\\n  <div class=\\\"container\\\" id=\\\"right-col\\\">\\r\\n    <div id=\\\"friends-list\\\" *ngFor=\\\"let friend of friends\\\">\\r\\n      <!--  -->\\r\\n      <a id=\\\"friend-unit\\\" href=\\\"\\\">\\r\\n        <img id=\\\"friend-prof-pic\\\" src={{friend.prof_pic}}>\\r\\n        <span id=\\\"friend-name\\\">{{friend.handle}}</span>\\r\\n      </a>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n</div>\"","import { GenrePreferenceService } from './../../services/genre-preference.service';\r\nimport { Friends } from '../../models/friends.model';\r\nimport { FriendsService } from './../../services/friends.service';\r\nimport { UsersService } from 'src/app/services/users.service';\r\nimport { Friend } from './../../models/friend';\r\nimport { Component, OnInit, ElementRef } from '@angular/core';\r\nimport { NavbarService } from 'src/app/services/navbar.service';\r\n\r\nimport { SessionServiceService } from '../../services/session-service.service';\r\nimport { Post } from '../../models/post';\r\n\r\nimport { Users } from 'src/app/models/users.model';\r\nimport { resolve } from 'q';\r\nimport { Preference } from '../../models/genre-preference.model';\r\n\r\n@Component({\r\n  selector: 'app-profile-page',\r\n  templateUrl: './profile-page.component.html',\r\n  styleUrls: ['./profile-page.component.css']\r\n})\r\nexport class ProfilePageComponent implements OnInit {\r\n\r\n  constructor(private elementRef: ElementRef,\r\n    private userService: UsersService,\r\n    private friendService: FriendsService,\r\n    private genrePreferenceService: GenrePreferenceService,\r\n    public nav: NavbarService) { }\r\n\r\n  sessionId: string;\r\n  promise: Promise<Users>;\r\n  currUser: Users;\r\n  friendsModel: Friends[];\r\n  preferencesModel: Preference[];\r\n\r\n\r\n  // Left column data\r\n  // Can include more profile data is desired\r\n  // Stored in currUser now\r\n  // user_pic = 'https://pbs.twimg.com/profile_images/826914296093241344/jswv7reL_400x400.jpg';\r\n  // username: string;\r\n\r\n  // Center column data\r\n  // Maybe populate w/ more as we scroll down\r\n  posts: Post[] = new Array();\r\n\r\n  // Right column data\r\n  // Should only populate up to 5-10 friends\r\n  // Too many would make the page very long\r\n  friends: Friend[] = new Array();\r\n\r\n  ngOnInit() {\r\n    console.log(\"profile-page OnInit\");\r\n    // this.elementRef.nativeElement.ownerDocument.body.style.backgroundColor = \"rgb(20, 29, 38)\";\r\n    // Get sessionId\r\n    // this.sessionService.currentMessage.subscribe(message => this.sessionId = message);\r\n    console.log(\"login: \" + this.sessionId);\r\n    console.log(\"praying: \" + JSON.parse(sessionStorage.id));\r\n    this.sessionId = JSON.parse(sessionStorage.id);\r\n    if(''+this.sessionId != 'default message'){\r\n      console.log(\"inside if\");\r\n      // sessionStorage.id = JSON.stringify(this.sessionId);\r\n      // Get friendsList\r\n      this.friendService.getFriendsByPerson(this.sessionId).subscribe((allFriends)=>{\r\n        this.friendsModel = allFriends;\r\n        // console.log(\"friends: \" + this.friendsModel);\r\n        // Retrieve data for each friend\r\n        this.friendsModel.forEach(element => {\r\n          // Get friend's data through userService\r\n          this.promise = new Promise<Users>((resolve)=>{\r\n            resolve(this.userService.getUserById(''+element.isFriendsWith));\r\n          });\r\n          // Process friend data and add to friends array\r\n          this.promise.then((value)=>{\r\n            console.log(\"friend: \" + value);\r\n            this.friends.push(\r\n              new Friend(value.firstName+' '+value.lastName,\r\n                value.pictureUrl,\r\n                value.prefs)\r\n            );\r\n            if(value.prefs.length > 0){\r\n              this.posts.push(\r\n                new Post(value.firstName+' '+value.lastName,\r\n                  value.pictureUrl,\r\n                  value.aboutMe,\r\n                  'Likes: ' + value.prefs[0].genre)\r\n              );\r\n            }\r\n          });\r\n\r\n          \r\n        });\r\n      });\r\n\r\n      // Get currrent User's data\r\n      this.promise = new Promise<Users>((resolve)=>{\r\n        resolve(this.userService.getUserById(this.sessionId));\r\n      });\r\n      // Populate page with current User's data\r\n      this.promise.then((value)=>{\r\n        console.log(value);\r\n        this.currUser = value;\r\n        // this.username = this.currUser.firstName + \" \" + this.currUser.lastName;\r\n        // this.user_pic = value.pictureUrl;\r\n      });\r\n    }\r\n\r\n    // ngDoCheck() {\r\n    //   console.log(\"profile-page DoCheck\");\r\n    // }\r\n    this.nav.show();\r\n  }  \r\n\r\n  hidePost() {\r\n    document.getElementById(\"post-buttons\").addEventListener(\"click\", function() {\r\n      document.getElementById(\"post-unit\").style.display = 'none';\r\n    })\r\n  }\r\n}\r\n","module.exports = \".btn {\\r\\n   padding-left: 3rem;\\r\\n   padding-right: 3rem; \\r\\n   \\r\\n}\\r\\n\\r\\n#submitBtn {\\r\\n    background-color: #1db954;\\r\\n    outline: none;\\r\\n    border-color: #1db954;\\r\\n}\\r\\n\\r\\n#registrationContainer {\\r\\n    margin-top: 50px;\\r\\n    padding: 40px;\\r\\n    background-color: #fff;\\r\\n    margin-bottom: 50px;\\r\\n    box-shadow: 0 -2px 40px rgba(142,156,170,0.2);\\r\\n    border-radius: 5px;\\r\\n    border: 1.6px solid #000;\\r\\n    \\r\\n}\\r\\n\\r\\n#registration-main {\\r\\n    background-image:  linear-gradient(to right, rgba(32,1,34, 0.8) -23.76%, rgba(111,0,0, 0.6) 76.43%);\\r\\n    background-position: center center;\\r\\n    background-repeat:  no-repeat;\\r\\n    background-attachment: fixed;\\r\\n    background-size:  cover;\\r\\n    font-family: 'Montserrat', sans-serif;\\r\\n    -webkit-font-smoothing: antialiased;\\r\\n    height: 100%;\\r\\n    color: #000;\\r\\n    \\r\\n}\\r\\n\\r\\n#registrationHeader {\\r\\n   padding: 40px;\\r\\n}\"","module.exports = \"<div id=\\\"registration-main\\\">\\r\\n<link href=\\\"https://fonts.googleapis.com/css?family=Montserrat\\\" rel=\\\"stylesheet\\\">\\r\\n<br>\\r\\n<div class=\\\"container text-center\\\" id=\\\"registrationContainer\\\">\\r\\n  <h2 id=\\\"registrationHeader\\\"> Create an account </h2>\\r\\n  <p *ngIf=\\\"dataSaved && registerForm\\\" ngClass=\\\"success\\\">\\r\\n    User created successfully!\\r\\n  </p>\\r\\n  <form [formGroup]=\\\"registrationForm\\\" (ngSubmit)=\\\"onFormSubmit()\\\">\\r\\n    <div class=\\\"text-left\\\">\\r\\n      <label for=\\\"firstName\\\">First name</label>\\r\\n      <input type=\\\"text\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\" />\\r\\n      <div>\\r\\n        <!-- <div>First name is required</div> -->\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n    <br>\\r\\n    <div class=\\\"text-left\\\">\\r\\n      <label for=\\\"lastName\\\">Last name</label>\\r\\n      <input type=\\\"text\\\" formControlName=\\\"lastName\\\" class=\\\"form-control\\\" />\\r\\n      <div>\\r\\n        <!-- <div>Last name is required</div> -->\\r\\n      </div>\\r\\n    </div>\\r\\n    <br>\\r\\n\\r\\n    <div class=\\\"text-left\\\">\\r\\n      <label for=\\\"lastName\\\">Email</label>\\r\\n      <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" />\\r\\n      <div>\\r\\n        <!-- <div>Last name is required</div> -->\\r\\n      </div>\\r\\n    </div>\\r\\n    <br>\\r\\n\\r\\n    <div class=\\\"text-left\\\">\\r\\n      <label for=\\\"password\\\">Password</label>\\r\\n      <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" />\\r\\n      <div>\\r\\n        <!-- <div>Last name is required</div> -->\\r\\n      </div>\\r\\n    </div>\\r\\n    <br>\\r\\n\\r\\n    <div class=\\\"text-left\\\">\\r\\n      <label for=\\\"phoneNumber\\\">Phone number</label>\\r\\n      <input type=\\\"text\\\" formControlName=\\\"phoneNumber\\\" class=\\\"form-control\\\" />\\r\\n      <div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br>\\r\\n\\r\\n    <div class=\\\"text-left\\\">\\r\\n      <label for=\\\"gender\\\">Gender</label>\\r\\n      <select formControlName=\\\"gender\\\" id=\\\"gender\\\" class=\\\"form-control\\\">\\r\\n        <option selected>Select gender</option>\\r\\n        <option>Male</option>\\r\\n        <option>Female</option>\\r\\n        <option>Other</option>\\r\\n      </select>\\r\\n    </div>\\r\\n    <br>\\r\\n    <div formGroupName=\\\"location\\\">\\r\\n      <div class=\\\"text-left\\\">\\r\\n        <label for=\\\"city\\\">City</label>\\r\\n        <input type=\\\"city\\\" formControlName=\\\"city\\\" class=\\\"form-control\\\" />\\r\\n      </div>\\r\\n      <br>\\r\\n      <div class=\\\"text-left\\\">\\r\\n        <label for=\\\"state\\\">State</label>\\r\\n        <select formControlName=\\\"state\\\" id=\\\"state\\\" class=\\\"form-control\\\">\\r\\n          <option value=\\\"\\\">N/A</option>\\r\\n          <option value=\\\"AK\\\">Alaska</option>\\r\\n          <option value=\\\"AL\\\">Alabama</option>\\r\\n          <option value=\\\"AR\\\">Arkansas</option>\\r\\n          <option value=\\\"AZ\\\">Arizona</option>\\r\\n          <option value=\\\"CA\\\">California</option>\\r\\n          <option value=\\\"CO\\\">Colorado</option>\\r\\n          <option value=\\\"CT\\\">Connecticut</option>\\r\\n          <option value=\\\"DC\\\">District of Columbia</option>\\r\\n          <option value=\\\"DE\\\">Delaware</option>\\r\\n          <option value=\\\"FL\\\">Florida</option>\\r\\n          <option value=\\\"GA\\\">Georgia</option>\\r\\n          <option value=\\\"HI\\\">Hawaii</option>\\r\\n          <option value=\\\"IA\\\">Iowa</option>\\r\\n          <option value=\\\"ID\\\">Idaho</option>\\r\\n          <option value=\\\"IL\\\">Illinois</option>\\r\\n          <option value=\\\"IN\\\">Indiana</option>\\r\\n          <option value=\\\"KS\\\">Kansas</option>\\r\\n          <option value=\\\"KY\\\">Kentucky</option>\\r\\n          <option value=\\\"LA\\\">Louisiana</option>\\r\\n          <option value=\\\"MA\\\">Massachusetts</option>\\r\\n          <option value=\\\"MD\\\">Maryland</option>\\r\\n          <option value=\\\"ME\\\">Maine</option>\\r\\n          <option value=\\\"MI\\\">Michigan</option>\\r\\n          <option value=\\\"MN\\\">Minnesota</option>\\r\\n          <option value=\\\"MO\\\">Missouri</option>\\r\\n          <option value=\\\"MS\\\">Mississippi</option>\\r\\n          <option value=\\\"MT\\\">Montana</option>\\r\\n          <option value=\\\"NC\\\">North Carolina</option>\\r\\n          <option value=\\\"ND\\\">North Dakota</option>\\r\\n          <option value=\\\"NE\\\">Nebraska</option>\\r\\n          <option value=\\\"NH\\\">New Hampshire</option>\\r\\n          <option value=\\\"NJ\\\">New Jersey</option>\\r\\n          <option value=\\\"NM\\\">New Mexico</option>\\r\\n          <option value=\\\"NV\\\">Nevada</option>\\r\\n          <option value=\\\"NY\\\">New York</option>\\r\\n          <option value=\\\"OH\\\">Ohio</option>\\r\\n          <option value=\\\"OK\\\">Oklahoma</option>\\r\\n          <option value=\\\"OR\\\">Oregon</option>\\r\\n          <option value=\\\"PA\\\">Pennsylvania</option>\\r\\n          <option value=\\\"PR\\\">Puerto Rico</option>\\r\\n          <option value=\\\"RI\\\">Rhode Island</option>\\r\\n          <option value=\\\"SC\\\">South Carolina</option>\\r\\n          <option value=\\\"SD\\\">South Dakota</option>\\r\\n          <option value=\\\"TN\\\">Tennessee</option>\\r\\n          <option value=\\\"TX\\\">Texas</option>\\r\\n          <option value=\\\"UT\\\">Utah</option>\\r\\n          <option value=\\\"VA\\\">Virginia</option>\\r\\n          <option value=\\\"VT\\\">Vermont</option>\\r\\n          <option value=\\\"WA\\\">Washington</option>\\r\\n          <option value=\\\"WI\\\">Wisconsin</option>\\r\\n          <option value=\\\"WV\\\">West Virginia</option>\\r\\n          <option value=\\\"WY\\\">Wyoming</option>\\r\\n        </select>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br>\\r\\n    <div class=\\\"text-left\\\">\\r\\n      <label for=\\\"orientation\\\">Orientation</label>\\r\\n      <select formControlName=\\\"orientation\\\" id=\\\"orientation\\\" class=\\\"form-control\\\">\\r\\n        <option selected>Select orientation</option>\\r\\n        <option>Straight</option>\\r\\n        <option>Gay</option>\\r\\n        <option>Bisexual</option>\\r\\n      </select>\\r\\n    </div>\\r\\n    <br>\\r\\n    <div class=\\\"text-left\\\">\\r\\n      <label for=\\\"aboutMe\\\">About me</label>\\r\\n      <input type=\\\"textarea\\\" formControlName=\\\"aboutMe\\\" class=\\\"form-control\\\" max-length=\\\"240\\\" />\\r\\n    <div>\\r\\n    <br>\\r\\n    <div class=\\\"text-left\\\">\\r\\n      <label for=\\\"pictureUrl\\\">Profile picture</label>\\r\\n      <input type=\\\"url\\\" formControlName=\\\"pictureUrl\\\" class=\\\"form-control\\\" placeholder=\\\"https://yourpictureURL.com\\\"/>\\r\\n    </div>\\r\\n    </div>\\r\\n    </div>\\r\\n    <br>\\r\\n    <input class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Create account\\\" id=\\\"submitBtn\\\">\\r\\n  </form>\\r\\n  <br>\\r\\n  <a href=\\\"/\\\"><button class=\\\"btn btn-outline-danger\\\">Home</button></a>\\r\\n</div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { Users } from 'src/app/models/users.model';\r\nimport { RegisterService } from 'src/app/services/register.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\n\r\nexport class RegisterComponent implements OnInit {\r\n  dataSaved = false;\r\n  registrationForm: FormGroup;\r\n  allUsers$: Observable<Users[]>;\r\n\r\n  constructor(private formBuilder:FormBuilder, private registerService: RegisterService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.registrationForm = this.formBuilder.group({\r\n      firstName: ['', [ Validators.required,  ] ],\r\n      lastName: ['', [ Validators.required ] ],\r\n      password: ['', [ Validators.required ] ],\r\n      email: ['', [ Validators.required ] ],\r\n      phoneNumber: ['', [ Validators.required ] ],\r\n      gender: ['', [ Validators.required ] ],\r\n      orientation: ['', [ Validators.required ] ],\r\n      aboutMe:  ['', [ Validators.required ] ],\r\n      location: this.formBuilder.group({\r\n        city: ['', [ Validators.required ] ],\r\n        state: ['', [ Validators.required ] ]\r\n      }),\r\n      pictureUrl: ['', [ Validators.required ] ]\r\n\r\n\r\n    })\r\n  }\r\n\r\n  onFormSubmit() {\r\n    this.dataSaved = false;\r\n    let account = this.registrationForm.value;\r\n    this.registerService.getAllUsers().subscribe(users => {\r\n      // let maxIndex = users.length - 1;\r\n      // let maxIndexItem = users[maxIndex];\r\n      // account.id = maxIndexItem.id + 1;\r\n      this.createUser(account);\r\n    });\r\n    this.registrationForm.reset();\r\n  }\r\n\r\n  createUser(user: Users) {\r\n    this.registerService.createUser(user).subscribe(\r\n      user => {\r\n        console.log(user);\r\n        this.dataSaved = true;\r\n        this.loadAllUsers();\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  loadAllUsers() {\r\n    this.allUsers$ = this.registerService.getAllUsers();\r\n  \r\n  }\r\n\r\n  get firstName() {\r\n    return this.registrationForm.get('firstName');\r\n  }\r\n  get lastName() {\r\n    return this.registrationForm.get('lastName');\r\n  }  \r\n  get password() {\r\n    return this.registrationForm.get('password');\r\n  }\r\n  get email() {\r\n    return this.registrationForm.get('email');\r\n  }\r\n  get phoneNumber() {\r\n    return this.registrationForm.get('phoneNumber');\r\n  }\r\n  get gender() {\r\n    return this.registrationForm.get('gender');\r\n  }\r\n  get orientation() {\r\n    return this.registrationForm.get('orientation');\r\n  }\r\n  get aboutMe() {\r\n    return this.registrationForm.get('aboutMe');\r\n  }\r\n  get city() {\r\n    return this.registrationForm.get('city');\r\n  }\r\n  get state() {\r\n    return this.registrationForm.get('state');\r\n  }\r\n  get pictureUrl() {\r\n    return this.registrationForm.get('state');\r\n  }\r\n}","module.exports = \"\"","module.exports = \"<p class=\\\"text-left\\\">Search for an artist or song</p>\\r\\n\\r\\n<form>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input type=\\\"text\\\" name=\\\"searchStr\\\"  [(ngModel)]=\\\"searchStr\\\" (keyup)=\\\"searchMusic()\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\">\\r\\n\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n<div *ngIf=\\\"searchRes\\\">\\r\\n  <div *ngFor=\\\"let res of searchRes\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"search-res well\\\">\\r\\n          <h4><a href=\\\"#\\\">{{res.name}}</a></h4>\\r\\n          <div>\\r\\n            <strong>Genres: </strong>\\r\\n            <span *ngFor=\\\"let genre of res.genres\\\">{{res.genres}}</span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { SpotifyService } from 'src/app/services/spotify.service';\r\nimport { Artist } from 'src/Artist';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css'],\r\n  providers: [SpotifyService]\r\n})\r\nexport class SearchComponent{\r\n\r\n  constructor(private _spotifyService: SpotifyService) { }\r\n\r\n    searchStr: string;\r\n    searchRes: Artist[];\r\n\r\n    searchMusic() {\r\n      this._spotifyService.searchMusic(this.searchStr)\r\n      .subscribe((res) => {\r\n        this.searchRes =  res.artists.items;\r\n      })\r\n    }\r\n\r\n\r\n}\r\n","module.exports = \"*{\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.round {\\r\\n    color: black;\\r\\n    width: 100%;\\r\\n    border-radius: 15px;\\r\\n    border: 1px #000 solid;\\r\\n    padding: 5px 5px 5px 25px;\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    z-index: 5;\\r\\n}\\r\\n\\r\\n.corner {\\r\\n    position: absolute;\\r\\n    top: 5px;\\r\\n    left: 5px;\\r\\n    height: 20px;\\r\\n    width: 20px;\\r\\n    z-index: 10;\\r\\n    border-radius: 10px;\\r\\n    border: none;\\r\\n    background: #000; /* Set the bg image here. with \\\"no-repeat\\\" */\\r\\n}\\r\\n\\r\\n.search {\\r\\n    position: relative;\\r\\n    width: 100%;\\r\\n    height: 30px;\\r\\n}\\r\\n\\r\\n#nav-bar{\\r\\n    background-color: rgb(29,185,84);\\r\\n}\\r\\n\\r\\n#base{\\r\\n    border-style: solid;\\r\\n    display: flex;\\r\\n    width: 100vw;\\r\\n}\\r\\n\\r\\n#search-bar{\\r\\n    border-style: solid;\\r\\n    width: 25%;\\r\\n    position: relative;\\r\\n    left: -2%;\\r\\n}\\r\\n\\r\\n#search-results{\\r\\n    border-style: solid;\\r\\n    width: 50%;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div id=\\\"nav-bar\\\">\\r\\n  nav-bar-placeholder\\r\\n</div>\\r\\n<div class=\\\"container\\\" id=\\\"base\\\">\\r\\n  <div id=\\\"search-bar\\\">\\r\\n    <form id=\\\"search-form\\\">\\r\\n        <div class=\\\"search\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"search\\\" class=\\\"round\\\" (keyup)=\\\"getUsers()\\\"/>\\r\\n          <input type=\\\"submit\\\" class=\\\"corner\\\" value=\\\"\\\" />\\r\\n        </div>\\r\\n    </form>\\r\\n  </div>\\r\\n  <div id=\\\"search-results\\\">\\r\\n    <div id=\\\"search-results-list\\\">\\r\\n      <div id=\\\"search-result-unit\\\" *ngFor=\\\"let friend of friends\\\">\\r\\n        <!-- PROFILE PIC -->\\r\\n        <a id=\\\"search-prof-pic-link\\\" href=\\\"\\\">\\r\\n          <img id=\\\"search-prof-pic\\\" src=\\\"{{friend.prof_pic}}\\\">\\r\\n          <figcaption id=\\\"search-handle\\\">{{friend.handle}}</figcaption>\\r\\n        </a>\\r\\n        <!-- TEXT BODY -->\\r\\n        <!-- SHOULD LIST TOP SONGS -->\\r\\n        <span id=\\\"search-text\\\">{{friend.songs}}</span>\\r\\n        <!-- SIDE BUTTONS -->\\r\\n        <div id=\\\"search-buttons-container\\\">\\r\\n          <button class=\\\"btn btn-success\\\" id=\\\"search-buttons\\\">+</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, ElementRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user-live-search',\r\n  templateUrl: './user-live-search.component.html',\r\n  styleUrls: ['./user-live-search.component.css']\r\n})\r\nexport class UserLiveSearchComponent implements OnInit {\r\n\r\n  constructor(private elementRef: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n    this.elementRef.nativeElement.ownerDocument.body.style.backgroundColor = \"rgb(33, 33, 33)\";\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { Users } from 'src/app/models/users.model';\r\nimport { UsersService } from 'src/app/services/users.service';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.css'],\r\n  providers: [UsersService]\r\n})\r\nexport class UsersComponent implements OnInit {\r\n\r\n  constructor( private usersService: UsersService) { }\r\n    \r\n  ngOnInit() {\r\n  }\r\n\r\n  users: Users[];\r\n  getUsers() {\r\n    this.usersService.getUsers()\r\n    .subscribe((allUsers) => this.users = allUsers);\r\n  }\r\n}","import { Preference } from './genre-preference.model';\r\nexport class Friend {\r\n    constructor(\r\n        public handle: string,\r\n        public prof_pic: string,\r\n        public songs: Preference[]){}\r\n}","export class Post {\r\n    constructor(\r\n\t    public handle: string,\r\n\t    public prof_pic: string,\r\n\t\tpublic text: string,\r\n\t\tpublic likes: string){}\r\n}","import { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Friends } from '../models/friends.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FriendsService {\r\n  url: string = \"http://ec2-54-191-35-75.us-west-2.compute.amazonaws.com:8082/friends\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getFriendsByPerson(id: string): Observable<Friends[]> {\r\n    return this.http.get<Friends[]>(this.url+\"/p/\"+id);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Preference } from '../models/genre-preference.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GenrePreferenceService {\r\n  url: string = 'http://ec2-54-191-35-75.us-west-2.compute.amazonaws.com:8082/preferences';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getPreferencesByUserId(id: number): Observable<Preference[]>{\r\n    return this.http.get<Preference[]>(this.url+\"/\"+id);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NavbarService {\r\n\r\n  visible: boolean;\r\n  \r\n  constructor() {\r\n    this.visible = false;\r\n   }\r\n\r\n  hide() {\r\n    this.visible = false;\r\n  }\r\n\r\n  show() {\r\n    this.visible = true;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Users } from '../models/users.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class RegisterService {\r\n  url = \"http://ec2-54-191-35-75.us-west-2.compute.amazonaws.com:8082/users\";\r\n  constructor(private http: HttpClient) {}\r\n\r\n  createUser(user: Users): Observable<Users> {\r\n    let httpHeaders = new HttpHeaders().set('Content-Type', 'application/json');\r\n    let options = {\r\n      headers: httpHeaders\r\n    };\r\n    return this.http.post<Users>(this.url, user, options);\r\n  }\r\n\r\n  postUser(user: Users): Observable<HttpResponse<Users>> {\r\n    let httpHeaders = new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    });\r\n    return this.http.post<Users>(this.url, user, {\r\n      headers: httpHeaders,\r\n      observe: 'response'\r\n    });\r\n  }\r\n  getAllUsers(): Observable<Users[]> {\r\n    return this.http.get<Users[]>(this.url);\r\n  }\r\n\r\n  // putUser(user: Users): Observable<HttpResponse<Users>> {\r\n  //   let httpHeaders = new HttpHeaders({\r\n  //     'Content-Type': 'application/json'\r\n  //   });\r\n\r\n  //   return this.http.put<Users>(this.url, user, {\r\n  //     headers: httpHeaders,\r\n  //     observe: 'response'\r\n  //   }\r\n  // }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SessionServiceService {\r\n\r\n  private messageSource = new BehaviorSubject('default message');\r\n  currentMessage = this.messageSource.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  changeMessage(message: string) {\r\n    this.messageSource.next(message);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\n// import 'rxjs/add/operator/map';\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class SpotifyService {\r\n\r\n  private searchUrl: string;\r\n\r\n  constructor(private _http: Http) {\r\n    \r\n  }\r\n\r\n  searchMusic(str:string, type='artist') {\r\n    // let headers = new Headers();\r\n\r\n    const headerDict = {\r\n      'Authorization': 'Bearer BQApiT4C30Q19tzuZUUABl8bAxqFPvklpFnxpfm1PhFKcCGvrpA4NkeSd1edrWsokeR6DM7WDYuCWZDIuvQ'\r\n    }\r\n\r\n    const requestOptions = {                                                                                                                                                                                 \r\n      headers: new Headers(headerDict), \r\n    };\r\n    \r\n    // let options = new RequestOptions({ headers: headers });\r\n    this.searchUrl = 'https://api.spotify.com/v1/search?query='+ str + '&offset=0&limit=6&type='+type+'&market=US';\r\n    return this._http.get(this.searchUrl, requestOptions).pipe(map((res) => res.json()));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpEvent } from '@angular/common/http';\r\nimport { Users } from 'src/app/models/users.model';\r\nimport { Http, Response } from \"@angular/http\";\r\nimport { Headers, RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsersService {\r\n  url:string = 'http://ec2-54-191-35-75.us-west-2.compute.amazonaws.com:8082/users';\r\n  loginUrl:string = 'http://ec2-54-191-35-75.us-west-2.compute.amazonaws.com:8082/logins';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUsers(): Observable<Users[]> {\r\n    return this.http.get<Users[]>(this.url);\r\n  }\r\n\r\n  getUserById(id: string): Promise<Users>{\r\n    return this.http.get<Users>(this.url+\"/\"+id).toPromise();\r\n  }\r\n\r\n  getUser(userEmail: string, userPassword: string): Promise<Users>{\r\n    return this.http.get<Users>(this.url+\"/byemail/\"+userEmail).toPromise();\r\n    // let body = {\r\n    //   emailAddress: userEmail,\r\n    //   password: userPassword\r\n    // }\r\n    // let user = new Users(null, null, null, userEmail, userPassword,null);\r\n    // console.log(user);\r\n    // const httpOptions = {\r\n    //   headers: new HttpHeaders({\r\n    //     'Content-Type':  'application/json'\r\n    //   })\r\n    // };\r\n    // return this.http.post<Users>(this.loginUrl, user, httpOptions);\r\n  }\r\n\r\n  loginValid(id: number): Promise<Users>{\r\n    return this.http.get<Users>(this.url+\"/logins/\"+id).toPromise();\r\n  }\r\n  \r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\r\n"],"sourceRoot":""}